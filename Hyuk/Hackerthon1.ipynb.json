{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "taken-stretch",
   "metadata": {},
   "source": [
    "# Plan\n",
    "\n",
    "- preprocess\n",
    "    - 하나의 파일로 만들기\n",
    "        - 데이터의 id는 (위도, 경도)\n",
    "        - 각각 reserve와 store_info 합치기\n",
    "        - 하나의 csv 파일로 합치기 \n",
    "        - 요일, holiday flag column 추가\n",
    "        - 식당 genre, area column 추가 \n",
    "        - air_visit_data 이용해서 워크인 count\n",
    "\n",
    "    - feature 찾기\n",
    "        - one-hot encoding (요일, 식당 genre, area)\n",
    "        - 분포 확인 (로그 변환 사용)\n",
    "        - 상관도 검색\n",
    "\n",
    "- train\n",
    "    - train : val = 8 : 2\n",
    "    - 여러 모델 테스트 (앙상블 사용 예상)\n",
    "    - 하이퍼 파라미터 조정\n",
    "    - RMSLE 값 기준\n",
    "\n",
    "- test\n",
    "    - 케글측에서 일부러 연휴 기간을 포함, 식당이 열지 않은 날도 있지만 최종 점수에 포함 안됨\n",
    "    - submission 파일 복사 후 날짜 분리, 사용할 feature append\n",
    "    - 예측\n",
    "    - submission 파일에 예측값 append\n",
    "    - 제출"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "emerging-western",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import datetime as dt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "drawn-madrid",
   "metadata": {},
   "outputs": [],
   "source": [
    "# csv load\n",
    "air_reserve_df = pd.read_csv('./data/air_reserve.csv')\n",
    "hpg_reserve_df = pd.read_csv('./data/hpg_reserve.csv')\n",
    "air_store_info_df = pd.read_csv('./data/air_store_info.csv')\n",
    "hpg_store_info_df = pd.read_csv('./data/hpg_store_info.csv')\n",
    "store_id_relation_df = pd.read_csv('./data/store_id_relation.csv')\n",
    "date_info_df = pd.read_csv('./data/date_info.csv')\n",
    "air_visit_data_df = pd.read_csv('./data/air_visit_data.csv')\n",
    "sample_submission_df = pd.read_csv('./data/sample_submission.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "familiar-canon",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>air_store_id</th>\n",
       "      <th>visit_datetime</th>\n",
       "      <th>reserve_datetime</th>\n",
       "      <th>reserve_visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-01 19:00:00</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>air_db4b38ebe7a7ceff</td>\n",
       "      <td>2016-01-01 19:00:00</td>\n",
       "      <td>2016-01-01 19:00:00</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>air_db4b38ebe7a7ceff</td>\n",
       "      <td>2016-01-01 19:00:00</td>\n",
       "      <td>2016-01-01 19:00:00</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-01 20:00:00</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>air_db80363d35f10926</td>\n",
       "      <td>2016-01-01 20:00:00</td>\n",
       "      <td>2016-01-01 01:00:00</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           air_store_id       visit_datetime     reserve_datetime  \\\n",
       "0  air_877f79706adbfb06  2016-01-01 19:00:00  2016-01-01 16:00:00   \n",
       "1  air_db4b38ebe7a7ceff  2016-01-01 19:00:00  2016-01-01 19:00:00   \n",
       "2  air_db4b38ebe7a7ceff  2016-01-01 19:00:00  2016-01-01 19:00:00   \n",
       "3  air_877f79706adbfb06  2016-01-01 20:00:00  2016-01-01 16:00:00   \n",
       "4  air_db80363d35f10926  2016-01-01 20:00:00  2016-01-01 01:00:00   \n",
       "\n",
       "   reserve_visitors  \n",
       "0                 1  \n",
       "1                 3  \n",
       "2                 6  \n",
       "3                 2  \n",
       "4                 5  "
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "air_reserve_df.head()\n",
    "# print(len(air_reserve_df['air_store_id'].unique()))\n",
    "# print(len(air_reserve_df['air_store_id']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "considered-thanksgiving",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>air_store_id</th>\n",
       "      <th>air_genre_name</th>\n",
       "      <th>air_area_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>air_0f0cdeee6c9bf3d7</td>\n",
       "      <td>Italian/French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi Kumoidōri</td>\n",
       "      <td>34.695124</td>\n",
       "      <td>135.197853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>air_7cc17a324ae5c7dc</td>\n",
       "      <td>Italian/French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi Kumoidōri</td>\n",
       "      <td>34.695124</td>\n",
       "      <td>135.197853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>air_fee8dcf4d619598e</td>\n",
       "      <td>Italian/French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi Kumoidōri</td>\n",
       "      <td>34.695124</td>\n",
       "      <td>135.197853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>air_a17f0778617c76e2</td>\n",
       "      <td>Italian/French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi Kumoidōri</td>\n",
       "      <td>34.695124</td>\n",
       "      <td>135.197853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>air_83db5aff8f50478e</td>\n",
       "      <td>Italian/French</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           air_store_id  air_genre_name                 air_area_name  \\\n",
       "0  air_0f0cdeee6c9bf3d7  Italian/French  Hyōgo-ken Kōbe-shi Kumoidōri   \n",
       "1  air_7cc17a324ae5c7dc  Italian/French  Hyōgo-ken Kōbe-shi Kumoidōri   \n",
       "2  air_fee8dcf4d619598e  Italian/French  Hyōgo-ken Kōbe-shi Kumoidōri   \n",
       "3  air_a17f0778617c76e2  Italian/French  Hyōgo-ken Kōbe-shi Kumoidōri   \n",
       "4  air_83db5aff8f50478e  Italian/French  Tōkyō-to Minato-ku Shibakōen   \n",
       "\n",
       "    latitude   longitude  \n",
       "0  34.695124  135.197853  \n",
       "1  34.695124  135.197853  \n",
       "2  34.695124  135.197853  \n",
       "3  34.695124  135.197853  \n",
       "4  35.658068  139.751599  "
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "air_store_info_df.head()\n",
    "# print(len(air_store_info_df['air_store_id'].unique()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "legendary-authorization",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hpg_store_id</th>\n",
       "      <th>visit_datetime</th>\n",
       "      <th>reserve_datetime</th>\n",
       "      <th>reserve_visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>hpg_c63f6f42e088e50f</td>\n",
       "      <td>2016-01-01 11:00:00</td>\n",
       "      <td>2016-01-01 09:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>hpg_dac72789163a3f47</td>\n",
       "      <td>2016-01-01 13:00:00</td>\n",
       "      <td>2016-01-01 06:00:00</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>hpg_c8e24dcf51ca1eb5</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>2016-01-01 14:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>hpg_24bb207e5fd49d4a</td>\n",
       "      <td>2016-01-01 17:00:00</td>\n",
       "      <td>2016-01-01 11:00:00</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>hpg_25291c542ebb3bc2</td>\n",
       "      <td>2016-01-01 17:00:00</td>\n",
       "      <td>2016-01-01 03:00:00</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           hpg_store_id       visit_datetime     reserve_datetime  \\\n",
       "0  hpg_c63f6f42e088e50f  2016-01-01 11:00:00  2016-01-01 09:00:00   \n",
       "1  hpg_dac72789163a3f47  2016-01-01 13:00:00  2016-01-01 06:00:00   \n",
       "2  hpg_c8e24dcf51ca1eb5  2016-01-01 16:00:00  2016-01-01 14:00:00   \n",
       "3  hpg_24bb207e5fd49d4a  2016-01-01 17:00:00  2016-01-01 11:00:00   \n",
       "4  hpg_25291c542ebb3bc2  2016-01-01 17:00:00  2016-01-01 03:00:00   \n",
       "\n",
       "   reserve_visitors  \n",
       "0                 1  \n",
       "1                 3  \n",
       "2                 2  \n",
       "3                 5  \n",
       "4                13  "
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hpg_reserve_df.head()\n",
    "# print(len(hpg_reserve_df['hpg_store_id'].unique()))\n",
    "# print(len(hpg_reserve_df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "billion-organ",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hpg_store_id</th>\n",
       "      <th>hpg_genre_name</th>\n",
       "      <th>hpg_area_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>hpg_6622b62385aec8bf</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Setagaya-ku Taishidō</td>\n",
       "      <td>35.643675</td>\n",
       "      <td>139.668221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>hpg_e9e068dd49c5fa00</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Setagaya-ku Taishidō</td>\n",
       "      <td>35.643675</td>\n",
       "      <td>139.668221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>hpg_2976f7acb4b3a3bc</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Setagaya-ku Taishidō</td>\n",
       "      <td>35.643675</td>\n",
       "      <td>139.668221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>hpg_e51a522e098f024c</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Setagaya-ku Taishidō</td>\n",
       "      <td>35.643675</td>\n",
       "      <td>139.668221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>hpg_e3d0e1519894f275</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Setagaya-ku Taishidō</td>\n",
       "      <td>35.643675</td>\n",
       "      <td>139.668221</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           hpg_store_id  hpg_genre_name                  hpg_area_name  \\\n",
       "0  hpg_6622b62385aec8bf  Japanese style  Tōkyō-to Setagaya-ku Taishidō   \n",
       "1  hpg_e9e068dd49c5fa00  Japanese style  Tōkyō-to Setagaya-ku Taishidō   \n",
       "2  hpg_2976f7acb4b3a3bc  Japanese style  Tōkyō-to Setagaya-ku Taishidō   \n",
       "3  hpg_e51a522e098f024c  Japanese style  Tōkyō-to Setagaya-ku Taishidō   \n",
       "4  hpg_e3d0e1519894f275  Japanese style  Tōkyō-to Setagaya-ku Taishidō   \n",
       "\n",
       "    latitude   longitude  \n",
       "0  35.643675  139.668221  \n",
       "1  35.643675  139.668221  \n",
       "2  35.643675  139.668221  \n",
       "3  35.643675  139.668221  \n",
       "4  35.643675  139.668221  "
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hpg_store_info_df.head()\n",
    "# print(len(hpg_store_info_df['hpg_store_id'].unique()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "suburban-jacket",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>air_store_id</th>\n",
       "      <th>hpg_store_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>air_63b13c56b7201bd9</td>\n",
       "      <td>hpg_4bc649e72e2a239a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>air_a24bf50c3e90d583</td>\n",
       "      <td>hpg_c34b496d0305a809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>air_c7f78b4f3cba33ff</td>\n",
       "      <td>hpg_cd8ae0d9bbd58ff9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>air_947eb2cae4f3e8f2</td>\n",
       "      <td>hpg_de24ea49dc25d6b8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>air_965b2e0cf4119003</td>\n",
       "      <td>hpg_653238a84804d8e7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           air_store_id          hpg_store_id\n",
       "0  air_63b13c56b7201bd9  hpg_4bc649e72e2a239a\n",
       "1  air_a24bf50c3e90d583  hpg_c34b496d0305a809\n",
       "2  air_c7f78b4f3cba33ff  hpg_cd8ae0d9bbd58ff9\n",
       "3  air_947eb2cae4f3e8f2  hpg_de24ea49dc25d6b8\n",
       "4  air_965b2e0cf4119003  hpg_653238a84804d8e7"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "store_id_relation_df.head()\n",
    "# print(len(store_id_relation_df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "expanded-twins",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Done\n"
     ]
    }
   ],
   "source": [
    "# store_id_relation.csv안에 id들이 1대1 맵핑인지 확인\n",
    "check_air_id = store_id_relation_df.duplicated(['air_store_id'])\n",
    "check_hpg_id = store_id_relation_df.duplicated(['hpg_store_id'])\n",
    "for i, e in enumerate(check_air_id):\n",
    "    if (e == True):\n",
    "        print(\"air_id: \" + i)\n",
    "for i, e in enumerate(check_hpg_id):\n",
    "    if (e == True):\n",
    "        print(\"hpg_id: \" + i)\n",
    "\n",
    "print(\"Done\") # 1대1 맵핑 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "present-northwest",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>calendar_date</th>\n",
       "      <th>day_of_week</th>\n",
       "      <th>holiday_flg</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2016-01-01</td>\n",
       "      <td>Friday</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2016-01-02</td>\n",
       "      <td>Saturday</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2016-01-03</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2016-01-04</td>\n",
       "      <td>Monday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2016-01-05</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  calendar_date day_of_week  holiday_flg\n",
       "0    2016-01-01      Friday            1\n",
       "1    2016-01-02    Saturday            1\n",
       "2    2016-01-03      Sunday            1\n",
       "3    2016-01-04      Monday            0\n",
       "4    2016-01-05     Tuesday            0"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "date_info_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "foreign-probability",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>air_store_id</th>\n",
       "      <th>visit_date</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>air_ba937bf13d40fb24</td>\n",
       "      <td>2016-01-13</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>air_ba937bf13d40fb24</td>\n",
       "      <td>2016-01-14</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>air_ba937bf13d40fb24</td>\n",
       "      <td>2016-01-15</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>air_ba937bf13d40fb24</td>\n",
       "      <td>2016-01-16</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>air_ba937bf13d40fb24</td>\n",
       "      <td>2016-01-18</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           air_store_id  visit_date  visitors\n",
       "0  air_ba937bf13d40fb24  2016-01-13        25\n",
       "1  air_ba937bf13d40fb24  2016-01-14        32\n",
       "2  air_ba937bf13d40fb24  2016-01-15        29\n",
       "3  air_ba937bf13d40fb24  2016-01-16        22\n",
       "4  air_ba937bf13d40fb24  2016-01-18         6"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "air_visit_data_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "internal-participation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>air_00a91d42b08b08d9_2017-04-23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>air_00a91d42b08b08d9_2017-04-24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>air_00a91d42b08b08d9_2017-04-25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>air_00a91d42b08b08d9_2017-04-26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>air_00a91d42b08b08d9_2017-04-27</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                id  visitors\n",
       "0  air_00a91d42b08b08d9_2017-04-23         0\n",
       "1  air_00a91d42b08b08d9_2017-04-24         0\n",
       "2  air_00a91d42b08b08d9_2017-04-25         0\n",
       "3  air_00a91d42b08b08d9_2017-04-26         0\n",
       "4  air_00a91d42b08b08d9_2017-04-27         0"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_submission_df.head()\n",
    "# df = sample_submission_df.copy()\n",
    "# df['new_id'] = df['id'].str.slice(start=0, stop=20)\n",
    "# df.head()\n",
    "# print(len(df['new_id'].unique()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "treated-chosen",
   "metadata": {},
   "source": [
    "## preprocess"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "going-canvas",
   "metadata": {},
   "source": [
    "### 하나의 csv로 만들기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "disciplinary-mileage",
   "metadata": {},
   "outputs": [],
   "source": [
    "# air 예약정보와 가게정보 합치기\n",
    "air_mixed_df = pd.merge(air_reserve_df, air_store_info_df)\n",
    "# air_mixed_df.head()\n",
    "# len(air_mixed_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "foreign-samba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hpg_store_id</th>\n",
       "      <th>visit_datetime</th>\n",
       "      <th>reserve_datetime</th>\n",
       "      <th>reserve_visitors</th>\n",
       "      <th>hpg_genre_name</th>\n",
       "      <th>hpg_area_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>hpg_dac72789163a3f47</td>\n",
       "      <td>2016-01-01 13:00:00</td>\n",
       "      <td>2016-01-01 06:00:00</td>\n",
       "      <td>3</td>\n",
       "      <td>French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi None</td>\n",
       "      <td>34.692109</td>\n",
       "      <td>135.191698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>hpg_dac72789163a3f47</td>\n",
       "      <td>2016-01-02 12:00:00</td>\n",
       "      <td>2016-01-01 20:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi None</td>\n",
       "      <td>34.692109</td>\n",
       "      <td>135.191698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>hpg_dac72789163a3f47</td>\n",
       "      <td>2016-01-03 19:00:00</td>\n",
       "      <td>2016-01-02 15:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi None</td>\n",
       "      <td>34.692109</td>\n",
       "      <td>135.191698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>hpg_dac72789163a3f47</td>\n",
       "      <td>2016-01-06 12:00:00</td>\n",
       "      <td>2016-01-06 08:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi None</td>\n",
       "      <td>34.692109</td>\n",
       "      <td>135.191698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>hpg_dac72789163a3f47</td>\n",
       "      <td>2016-01-10 17:00:00</td>\n",
       "      <td>2016-01-04 22:00:00</td>\n",
       "      <td>3</td>\n",
       "      <td>French</td>\n",
       "      <td>Hyōgo-ken Kōbe-shi None</td>\n",
       "      <td>34.692109</td>\n",
       "      <td>135.191698</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           hpg_store_id       visit_datetime     reserve_datetime  \\\n",
       "0  hpg_dac72789163a3f47  2016-01-01 13:00:00  2016-01-01 06:00:00   \n",
       "1  hpg_dac72789163a3f47  2016-01-02 12:00:00  2016-01-01 20:00:00   \n",
       "2  hpg_dac72789163a3f47  2016-01-03 19:00:00  2016-01-02 15:00:00   \n",
       "3  hpg_dac72789163a3f47  2016-01-06 12:00:00  2016-01-06 08:00:00   \n",
       "4  hpg_dac72789163a3f47  2016-01-10 17:00:00  2016-01-04 22:00:00   \n",
       "\n",
       "   reserve_visitors hpg_genre_name            hpg_area_name   latitude  \\\n",
       "0                 3         French  Hyōgo-ken Kōbe-shi None  34.692109   \n",
       "1                 2         French  Hyōgo-ken Kōbe-shi None  34.692109   \n",
       "2                 2         French  Hyōgo-ken Kōbe-shi None  34.692109   \n",
       "3                 2         French  Hyōgo-ken Kōbe-shi None  34.692109   \n",
       "4                 3         French  Hyōgo-ken Kōbe-shi None  34.692109   \n",
       "\n",
       "    longitude  \n",
       "0  135.191698  \n",
       "1  135.191698  \n",
       "2  135.191698  \n",
       "3  135.191698  \n",
       "4  135.191698  "
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hpg_mixed_df = pd.merge(hpg_reserve_df, hpg_store_info_df)\n",
    "hpg_mixed_df.head()\n",
    "# print(len(hpg_reserve_df))\n",
    "# print(len(hpg_mixed_df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "scheduled-drawing",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>visit_datetime</th>\n",
       "      <th>reserve_datetime</th>\n",
       "      <th>reserve_visitors</th>\n",
       "      <th>genre</th>\n",
       "      <th>area_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-01 19:00:00</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-01 20:00:00</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-02 18:00:00</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-02 21:00:00</td>\n",
       "      <td>2016-01-01 16:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>air_877f79706adbfb06</td>\n",
       "      <td>2016-01-08 21:00:00</td>\n",
       "      <td>2016-01-04 20:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871303</th>\n",
       "      <td>hpg_e106ddef2b137959</td>\n",
       "      <td>2017-04-24 18:00:00</td>\n",
       "      <td>2017-04-20 14:00:00</td>\n",
       "      <td>8</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871304</th>\n",
       "      <td>hpg_e106ddef2b137959</td>\n",
       "      <td>2017-04-24 19:00:00</td>\n",
       "      <td>2017-04-22 14:00:00</td>\n",
       "      <td>14</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871305</th>\n",
       "      <td>hpg_e106ddef2b137959</td>\n",
       "      <td>2017-04-24 19:00:00</td>\n",
       "      <td>2017-04-22 14:00:00</td>\n",
       "      <td>15</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871306</th>\n",
       "      <td>hpg_e106ddef2b137959</td>\n",
       "      <td>2017-04-24 19:00:00</td>\n",
       "      <td>2017-04-10 17:00:00</td>\n",
       "      <td>18</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871307</th>\n",
       "      <td>hpg_e106ddef2b137959</td>\n",
       "      <td>2017-04-28 18:00:00</td>\n",
       "      <td>2017-04-10 17:00:00</td>\n",
       "      <td>22</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>963686 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          id       visit_datetime     reserve_datetime  \\\n",
       "0       air_877f79706adbfb06  2016-01-01 19:00:00  2016-01-01 16:00:00   \n",
       "1       air_877f79706adbfb06  2016-01-01 20:00:00  2016-01-01 16:00:00   \n",
       "2       air_877f79706adbfb06  2016-01-02 18:00:00  2016-01-01 16:00:00   \n",
       "3       air_877f79706adbfb06  2016-01-02 21:00:00  2016-01-01 16:00:00   \n",
       "4       air_877f79706adbfb06  2016-01-08 21:00:00  2016-01-04 20:00:00   \n",
       "...                      ...                  ...                  ...   \n",
       "871303  hpg_e106ddef2b137959  2017-04-24 18:00:00  2017-04-20 14:00:00   \n",
       "871304  hpg_e106ddef2b137959  2017-04-24 19:00:00  2017-04-22 14:00:00   \n",
       "871305  hpg_e106ddef2b137959  2017-04-24 19:00:00  2017-04-22 14:00:00   \n",
       "871306  hpg_e106ddef2b137959  2017-04-24 19:00:00  2017-04-10 17:00:00   \n",
       "871307  hpg_e106ddef2b137959  2017-04-28 18:00:00  2017-04-10 17:00:00   \n",
       "\n",
       "        reserve_visitors           genre                     area_name  \\\n",
       "0                      1   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "1                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "2                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "3                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "4                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "...                  ...             ...                           ...   \n",
       "871303                 8  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871304                14  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871305                15  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871306                18  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871307                22  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "\n",
       "         latitude   longitude  \n",
       "0       35.658068  139.751599  \n",
       "1       35.658068  139.751599  \n",
       "2       35.658068  139.751599  \n",
       "3       35.658068  139.751599  \n",
       "4       35.658068  139.751599  \n",
       "...           ...         ...  \n",
       "871303  35.682504  139.773619  \n",
       "871304  35.682504  139.773619  \n",
       "871305  35.682504  139.773619  \n",
       "871306  35.682504  139.773619  \n",
       "871307  35.682504  139.773619  \n",
       "\n",
       "[963686 rows x 8 columns]"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# column name 공통되게 변경\n",
    "air_mixed_new_columns_df = air_mixed_df.rename(columns = {\"air_store_id\":\"id\", \"air_genre_name\":\"genre\", \"air_area_name\": \"area_name\"}, inplace = False)\n",
    "hpg_mixed_new_columns_df = hpg_mixed_df.rename(columns = {\"hpg_store_id\":\"id\", \"hpg_genre_name\":\"genre\", \"hpg_area_name\": \"area_name\"}, inplace = False)\n",
    "mixed_df = pd.concat([air_mixed_new_columns_df, hpg_mixed_new_columns_df])\n",
    "mixed_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "vocal-category",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reserve_visitors</th>\n",
       "      <th>genre</th>\n",
       "      <th>area_name</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>visit_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "      <td>2016-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "      <td>2016-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "      <td>2016-01-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "      <td>2016-01-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>Japanese food</td>\n",
       "      <td>Tōkyō-to Minato-ku Shibakōen</td>\n",
       "      <td>35.658068</td>\n",
       "      <td>139.751599</td>\n",
       "      <td>2016-01-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871303</th>\n",
       "      <td>8</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "      <td>2017-04-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871304</th>\n",
       "      <td>14</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "      <td>2017-04-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871305</th>\n",
       "      <td>15</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "      <td>2017-04-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871306</th>\n",
       "      <td>18</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "      <td>2017-04-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871307</th>\n",
       "      <td>22</td>\n",
       "      <td>Japanese style</td>\n",
       "      <td>Tōkyō-to Chūō-ku None</td>\n",
       "      <td>35.682504</td>\n",
       "      <td>139.773619</td>\n",
       "      <td>2017-04-28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>963686 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        reserve_visitors           genre                     area_name  \\\n",
       "0                      1   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "1                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "2                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "3                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "4                      2   Japanese food  Tōkyō-to Minato-ku Shibakōen   \n",
       "...                  ...             ...                           ...   \n",
       "871303                 8  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871304                14  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871305                15  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871306                18  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "871307                22  Japanese style         Tōkyō-to Chūō-ku None   \n",
       "\n",
       "         latitude   longitude  visit_date  \n",
       "0       35.658068  139.751599  2016-01-01  \n",
       "1       35.658068  139.751599  2016-01-01  \n",
       "2       35.658068  139.751599  2016-01-02  \n",
       "3       35.658068  139.751599  2016-01-02  \n",
       "4       35.658068  139.751599  2016-01-08  \n",
       "...           ...         ...         ...  \n",
       "871303  35.682504  139.773619  2017-04-24  \n",
       "871304  35.682504  139.773619  2017-04-24  \n",
       "871305  35.682504  139.773619  2017-04-24  \n",
       "871306  35.682504  139.773619  2017-04-24  \n",
       "871307  35.682504  139.773619  2017-04-28  \n",
       "\n",
       "[963686 rows x 6 columns]"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# visit_datetime을 년월일로 변경\n",
    "mixed_cp_df = mixed_df.copy()\n",
    "mixed_cp_df['visit_date'] = mixed_cp_df['visit_datetime'].str.slice(start=0, stop=10)\n",
    "mixed_cp_df= mixed_cp_df.drop(['id', 'visit_datetime', 'reserve_datetime'], axis='columns')\n",
    "mixed_cp_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "asian-cement",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'Series' objects are mutable, thus they cannot be hashed",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-191-6fa39988c5df>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# 같은 식당, 같은 년월일을 기준으로 reserve_visitors 합치기\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mgrouped_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmixed_cp_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'reserve_visitors'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmixed_cp_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmixed_cp_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'visit_date'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mgrouped_df\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/conda/lib/python3.7/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mgroupby\u001b[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)\u001b[0m\n\u001b[1;32m   1687\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlevel\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mby\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1688\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"You have to supply one of 'by' and 'level'\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1689\u001b[0;31m         \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1691\u001b[0m         return SeriesGroupBy(\n",
      "\u001b[0;32m/opt/conda/lib/python3.7/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_get_axis_number\u001b[0;34m(cls, axis)\u001b[0m\n\u001b[1;32m    455\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAxis\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 457\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_AXIS_TO_AXIS_NUMBER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    458\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"No axis named {axis} for object type {cls.__name__}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/conda/lib/python3.7/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__hash__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1781\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__hash__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1782\u001b[0m         raise TypeError(\n\u001b[0;32m-> 1783\u001b[0;31m             \u001b[0;34mf\"{repr(type(self).__name__)} objects are mutable, \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1784\u001b[0m             \u001b[0;34mf\"thus they cannot be hashed\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1785\u001b[0m         )\n",
      "\u001b[0;31mTypeError\u001b[0m: 'Series' objects are mutable, thus they cannot be hashed"
     ]
    }
   ],
   "source": [
    "# 같은 식당, 같은 년월일을 기준으로 reserve_visitors 합치기\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "swiss-cisco",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 요일과 holiday flag 추가하기\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "atlantic-compact",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Japanese food', 'Dining bar', 'Izakaya',\n",
       "       'Okonomiyaki/Monja/Teppanyaki', 'Italian/French', 'Cafe/Sweets',\n",
       "       'Yakiniku/Korean food', 'Western food', 'Bar/Cocktail', 'Other',\n",
       "       'Creative cuisine', 'Karaoke/Party', 'International cuisine',\n",
       "       'Asian', 'French', 'Japanese style', 'Seafood', 'Creation',\n",
       "       'Japanese food in general', 'Grilled meat', 'Italian',\n",
       "       'Spain Bar/Italian Bar', 'Shabu-shabu/Sukiyaki',\n",
       "       'Japanese cuisine/Kaiseki', 'Bistro', 'Steak/Hamburger/Curry',\n",
       "       'Chinese general', 'Creative Japanese food', 'Korean cuisine',\n",
       "       'Udon/Soba', 'Sushi', 'Sweets', 'Karaoke', 'Cafe',\n",
       "       'Thai/Vietnamese food', 'Pasta/Pizza', 'Party', 'Amusement bar',\n",
       "       'Cantonese food', 'Shanghai food', 'Sichuan food',\n",
       "       'Spain/Mediterranean cuisine', 'Dim Sum/Dumplings',\n",
       "       'Taiwanese/Hong Kong cuisine'], dtype=object)"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# genre 값 확인\n",
    "mixed_df['genre'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "afraid-married",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Tōkyō-to Minato-ku Shibakōen', 'Ōsaka-fu Ōsaka-shi Shinmachi',\n",
       "       'Hokkaidō Asahikawa-shi 6 Jōdōri',\n",
       "       'Miyagi-ken Sendai-shi Kamisugi',\n",
       "       'Hiroshima-ken Hiroshima-shi Kokutaijimachi',\n",
       "       'Shizuoka-ken Hamamatsu-shi Motoshirochō',\n",
       "       'Fukuoka-ken Kurume-shi Jōnanmachi',\n",
       "       'Hokkaidō Sapporo-shi Minami 3 Jōnishi',\n",
       "       'Shizuoka-ken Shizuoka-shi Ōtemachi',\n",
       "       'Fukuoka-ken Fukuoka-shi Daimyō',\n",
       "       'Fukuoka-ken Kitakyūshū-shi Ōtemachi',\n",
       "       'Hyōgo-ken Nishinomiya-shi Rokutanjichō',\n",
       "       'Hokkaidō Abashiri-shi Minami 6 Jōhigashi',\n",
       "       'Fukuoka-ken Fukuoka-shi Hakata Ekimae',\n",
       "       'Tōkyō-to Chūō-ku Tsukiji', 'Tōkyō-to Shibuya-ku Shibuya',\n",
       "       'Fukuoka-ken Kitakyūshū-shi None', 'Tōkyō-to Itabashi-ku Itabashi',\n",
       "       'Tōkyō-to Taitō-ku Higashiueno', 'Ōsaka-fu Ōsaka-shi Kyūtarōmachi',\n",
       "       'Hyōgo-ken Kakogawa-shi Kakogawachō Kitazaike',\n",
       "       'Tōkyō-to Chūō-ku Ginza',\n",
       "       'Hiroshima-ken Fukuyama-shi Higashisakuramachi',\n",
       "       'Niigata-ken Niigata-shi Gakkōchōdōri 1 Banchō',\n",
       "       'Tōkyō-to Suginami-ku Asagayaminami',\n",
       "       'Hokkaidō Sapporo-shi Kotoni 2 Jō', 'Tōkyō-to Kōtō-ku Kameido',\n",
       "       'Fukuoka-ken Yame-shi Motomachi',\n",
       "       'Hiroshima-ken Hiroshima-shi Nagarekawachō',\n",
       "       'Hyōgo-ken Kōbe-shi Kumoidōri', 'Tōkyō-to Toshima-ku Mejiro',\n",
       "       'Tōkyō-to Kōtō-ku Tōyō', 'Ōsaka-fu Ōsaka-shi Ōgimachi',\n",
       "       'Tōkyō-to Chiyoda-ku Kudanminami',\n",
       "       'Tōkyō-to Toshima-ku Nishiikebukuro', 'Tōkyō-to Meguro-ku Takaban',\n",
       "       'Tōkyō-to Shinjuku-ku Kabukichō',\n",
       "       'Tōkyō-to Katsushika-ku Tateishi',\n",
       "       'Tōkyō-to Musashino-shi Midorichō', 'Hyōgo-ken Himeji-shi Yasuda',\n",
       "       'Tōkyō-to Shibuya-ku Dōgenzaka', 'Tōkyō-to Meguro-ku Kamimeguro',\n",
       "       'Tōkyō-to Machida-shi Morino', 'Tōkyō-to Kōtō-ku Tomioka',\n",
       "       'Fukuoka-ken Fukuoka-shi Shiobaru',\n",
       "       'Hokkaidō Sapporo-shi Atsubetsuchūō 1 Jō',\n",
       "       'Tōkyō-to Tachikawa-shi Izumichō',\n",
       "       'Hyōgo-ken Takarazuka-shi Tōyōchō',\n",
       "       'Tōkyō-to Shinagawa-ku Hiromachi', 'Tōkyō-to Setagaya-ku Okusawa',\n",
       "       'Niigata-ken Nagaoka-shi Ōtedōri', 'Tōkyō-to Ōta-ku Kamata',\n",
       "       'Fukuoka-ken Fukuoka-shi Momochi', 'Tōkyō-to Minato-ku Akasaka',\n",
       "       'Niigata-ken Niigata-shi Teraohigashi',\n",
       "       'Ōsaka-fu Ōsaka-shi Kyōmachibori',\n",
       "       'Hokkaidō Sapporo-shi Kita 24 Jōnishi',\n",
       "       'Fukuoka-ken Fukuoka-shi Takatori', 'Tōkyō-to Edogawa-ku Chūō',\n",
       "       'Ōsaka-fu Ōsaka-shi Ōhiraki', 'Hyōgo-ken Kōbe-shi Motomachidōri',\n",
       "       'Ōsaka-fu Higashiōsaka-shi Aramotokita',\n",
       "       'Tōkyō-to Setagaya-ku Setagaya', 'Tōkyō-to Nerima-ku Toyotamakita',\n",
       "       'Tōkyō-to Toshima-ku Minamiikebukuro',\n",
       "       'Tōkyō-to Chiyoda-ku Kanda Jinbōchō',\n",
       "       'Ōsaka-fu Ōsaka-shi Nanbasennichimae', 'Tōkyō-to Nakano-ku Nakano',\n",
       "       'Hyōgo-ken Amagasaki-shi Higashinanamatsuchō',\n",
       "       'Tōkyō-to Taitō-ku Asakusa', 'Tōkyō-to Shinjuku-ku Nishishinjuku',\n",
       "       'Hyōgo-ken Kōbe-shi None', 'Fukuoka-ken Fukuoka-shi None',\n",
       "       'Tōkyō-to Shinjuku-ku None', 'Tōkyō-to Minato-ku Roppongi',\n",
       "       'Hokkaidō Sapporo-shi Hondōri (Kita)',\n",
       "       'Tōkyō-to Kita-ku Higashijūjō', 'Tōkyō-to Taitō-ku None',\n",
       "       'Tōkyō-to Toshima-ku None', 'Tōkyō-to Minato-ku Takanawa',\n",
       "       'Hokkaidō Sapporo-shi None', 'Shizuoka-ken Shizuoka-shi Hinodechō',\n",
       "       'Tōkyō-to Kōtō-ku Minamisuna', 'None None None',\n",
       "       'Tōkyō-to Tama-shi Tsurumaki', 'Tōkyō-to Shinagawa-ku Yutakachō',\n",
       "       'Shizuoka-ken Shizuoka-shi Irie',\n",
       "       'Fukuoka-ken Kitakyūshū-shi Sunatsu',\n",
       "       'Ōsaka-fu Ōsaka-shi Shinsaibashisuji',\n",
       "       'Tōkyō-to Fussa-shi Musashinodai', 'Tōkyō-to Sumida-ku Tachibana',\n",
       "       'Hiroshima-ken Fukuyama-shi Sannomaruchō',\n",
       "       'Tōkyō-to Shibuya-ku Ebisunishi',\n",
       "       'Niigata-ken Niigata-shi Yoneyama',\n",
       "       'Fukuoka-ken Fukuoka-shi Minamishō', 'Ōsaka-fu Ōsaka-shi None',\n",
       "       'Tōkyō-to Chōfu-shi Fujimichō', 'Ōsaka-fu Suita-shi Enokichō',\n",
       "       'Tōkyō-to Nerima-ku Hikawadai',\n",
       "       'Ōsaka-fu Higashiōsaka-shi Wakaenishishinmachi',\n",
       "       'Hokkaidō Asahikawa-shi 3 Jōdōri', 'Fukuoka-ken Fukuoka-shi Ōmiya',\n",
       "       'Tōkyō-to Toshima-ku Kitaōtsuka',\n",
       "       'Ōsaka-fu Takatsuki-shi Kamitanabechō',\n",
       "       'Hyōgo-ken Kakogawa-shi Noguchichō Yoshino',\n",
       "       'Niigata-ken Niigata-shi Higashiōdōri',\n",
       "       'Miyagi-ken Sendai-shi Ichibanchō',\n",
       "       'Shizuoka-ken Numazu-shi Yanagisawa',\n",
       "       'Tōkyō-to Machida-shi Nakamachi', 'Ōsaka-fu Ōsaka-shi Nakanochō',\n",
       "       'Osaka Prefecture Osaka None', 'Hyōgo-ken Himeji-shi Tsuchiyama',\n",
       "       'Miyagi-ken Sendai-shi None', 'Ōsaka-fu Sakai-shi None',\n",
       "       'Tōkyō-to Adachi-ku None', 'Hiroshima-ken Hiroshima-shi Hondōri',\n",
       "       'Tōkyō-to Chiyoda-ku None', 'Tōkyō-to Hachiōji-shi Ishikawamachi',\n",
       "       'Hyōgo-ken Akashi-shi Nishiakashichō',\n",
       "       'Hokkaidō Sapporo-shi Minami 4 Jōnishi',\n",
       "       'Kanagawa-ken Yokohama-shi Nagatsutachō',\n",
       "       'Fukuoka-ken Fukuoka-shi Matsushima', 'Hokkaidō Hakodate-shi None',\n",
       "       'Miyagi-ken Ōsaki-shi Furukawa', 'Tōkyō-to Shibuya-ku None',\n",
       "       'Ōsaka-fu Neyagawa-shi Kotobukichō',\n",
       "       'Ōsaka-fu Ōsaka-shi Abenosuji',\n",
       "       'Hiroshima-ken Higashihiroshima-shi Hachihonmatsuchō Yoshikawa',\n",
       "       'Hiroshima-ken Hiroshima-shi Yokogawachō',\n",
       "       'Hokkaidō Sapporo-shi Sumikawa 2 Jō',\n",
       "       'Tōkyō-to Hino-shi Nishihirayama',\n",
       "       'Fukuoka-ken Kitakyūshū-shi Aoyama',\n",
       "       'Shizuoka-ken Hamamatsu-shi Sukenobuchō',\n",
       "       'Tōkyō-to Setagaya-ku Kitazawa', 'Shizuoka-ken None None',\n",
       "       'Tōkyō-to Shinjuku-ku Takadanobaba',\n",
       "       'Ōsaka-fu Ōsaka-shi Tsuruhashi', 'Niigata-ken Nagaoka-shi Yamada',\n",
       "       'Niigata-ken Niigata-shi Furumachidōri 7 Banchō',\n",
       "       'Tōkyō-to Setagaya-ku Taishidō',\n",
       "       'Tōkyō-to Shinjuku-ku Hyakuninchō', 'Tōkyō-to Bunkyō-ku Kōraku',\n",
       "       'Saitama-ken Niiza-shi Nodera', 'Hokkaidō Tokachi-gun Kawakami',\n",
       "       'Ōsaka-fu Ōsaka-shi Awajimachi', 'Ōsaka-fu Kaizuka-shi Umizuka',\n",
       "       'Niigata-ken Niigata-shi Sakaihigashi', 'Ōsaka-fu Ōsaka-shi Izuo',\n",
       "       'Tōkyō-to Meguro-ku Jiyūgaoka', 'Shizuoka-ken Shimada-shi Asahi',\n",
       "       'Fukuoka-ken Kurume-shi Higashimachi',\n",
       "       'Tōkyō-to Minato-ku Kitaaoyama', 'Tōkyō-to Koganei-shi Kajinochō',\n",
       "       'Miyagi-ken Sendai-shi Nanakita',\n",
       "       'Niigata-ken Jōetsu-shi Minamitaya Shinden',\n",
       "       'Tōkyō-to Chūō-ku None', 'Ōsaka-fu Ibaraki-shi Shimochūjōchō',\n",
       "       'Miyagi-ken Sendai-shi Izumizaki',\n",
       "       'Niigata-ken Niigata-shi Kurumaba',\n",
       "       'Hyōgo-ken Kōbe-shi Mikage Nakamachi',\n",
       "       'Tōkyō-to Nishitōkyō-shi Fujimachi', 'Tōkyō-to Setagaya-ku None',\n",
       "       'Hokkaidō Asahikawa-shi Higashi 6 Jō',\n",
       "       'Ōsaka-fu Sakai-shi Kobirao',\n",
       "       'Fukuoka-ken Chikushino-shi Yamaguchi',\n",
       "       'Hyōgo-ken Amagasaki-shi Minamitsukaguchichō',\n",
       "       'Tōkyō-to Hino-shi Ochikawa',\n",
       "       'Hyōgo-ken Kōbe-shi Tainohata Higashimachi',\n",
       "       'Fukuoka-ken Iizuka-shi Mashiki', 'Tōkyō-to Minato-ku None',\n",
       "       'Ōsaka-fu Ōsaka-shi Hannanchō',\n",
       "       'Tōkyō-to Kokubunji-shi Nishikoigakubo',\n",
       "       'Hokkaidō Ashibetsu-shi None',\n",
       "       'Hokkaidō Sapporo-shi Kita 30 Jōhigashi',\n",
       "       'Niigata-ken Shibata-shi Miyukichō', 'Tōkyō-to Suginami-ku Izumi',\n",
       "       'Niigata-ken Niigata-shi Meike',\n",
       "       'Hyōgo-ken Nishinomiya-shi Okadayama',\n",
       "       'Miyagi-ken Sendai-shi Miyamachi',\n",
       "       'Miyagi-ken Shiogama-shi Shōyōdai',\n",
       "       'Tōkyō-to Itabashi-ku Maenochō',\n",
       "       'Shizuoka-ken Fujinomiya-shi Wakanomiyachō',\n",
       "       'Ōsaka-fu Minoo-shi Hanjo', 'Niigata-ken Nagaoka-shi Rokusho',\n",
       "       'Shizuoka-ken Itō-shi Ogi', 'Tōkyō-to Shinagawa-ku Koyama'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# area_name none 확인\n",
    "mixed_df['area_name'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "honest-combat",
   "metadata": {},
   "outputs": [],
   "source": [
    "# air_visit_data 이용해서 워크인, 노쇼 등 확인"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "remarkable-soviet",
   "metadata": {},
   "source": [
    "### Feature 찾기"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "respiratory-juvenile",
   "metadata": {},
   "source": [
    "## Train"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "selected-sharing",
   "metadata": {},
   "source": [
    "## Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "smoking-arlington",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
